import "nuggetdb/db.pil"
import "nuggetdb/entity.pil"
import "nuggetdb/util.pil"
import "nuggetdb/json.pil"

import nuggetdb
import nuggetdb::util

class nuggetdb::Shard {
  String name = "default";
  String tablePrefix = "default";
  pil::db::Connection conn = null;

  new(String name, pil::db::Connection conn, String tablePrefix) {
    this.name = name;
    this.conn = conn;
    this.tablePrefix = tablePrefix;
    create();
  }

  String extractNs(String dbId) {
    var parts = dbId.split("/");
    if(parts.length == 1) {
      return null;
    } else {
      return joinStrings("/", subStringArray(parts, 0, parts.length-2));
    }
  }

  String extractId(String dbId) {
    var parts = dbId.split("/");
    return parts[parts.length-1];
  }

  void put(Entity e) {
    e.shard = this;
    if(e.isNew) {
      var sql = "INSERT INTO " + tablePrefix + "entity VALUES ('" + sqlEscape(e.dbId()) + "', NOW(), '" + sqlEscape(e.toJson()) + "');";
      conn.updateQuery(sql);
      e.isNew = false;
    } else {
      var sql = "UPDATE " + tablePrefix + "entity SET updated = NOW(), content = '" + sqlEscape(e.toJson()) + "' WHERE id = '" + sqlEscape(e.dbId()) + "';";
      conn.updateQuery(sql);
    }
  }

  Entity get(String dbId) {
    var sql = "SELECT * FROM " + tablePrefix + "entity WHERE id = '" + sqlEscape(dbId) + "' LIMIT 1;";
    var results = conn.query(sql);
    if(results.length == 1) {
      return entityFromDbRow(results[0]);
    } else {
      return null;
    }
  }

  Entity entityFromDbRow(pil::db::Result r) {
    var e = new Entity();
    e.id = r.getString(0);
    e.updated = r.getDateTime(1);
    e.json = pil::json::fromJsonString(r.getString(2));
    e.shard = this;
    return e;
  }

  void create() {
    for(pil::db::Result r : conn.query("SHOW TABLES;")) {
      if(r.getString(0) == tablePrefix + "entity") {
        return;
      }
    }
    // Table does not yet exist
    var sql = "CREATE TABLE " + tablePrefix + "entity (";
    sql = sql + "   id      VARCHAR(200) NOT NULL,";
    sql = sql + "   updated TIMESTAMP DEFAULT NOW(),";
    sql = sql + "   content MEDIUMTEXT,";
    sql = sql + "   PRIMARY KEY  (`id`)";
    sql = sql + ") ENGINE=InnoDB;";
    conn.updateQuery(sql);
  }
}
